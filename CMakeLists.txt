# ==================================================================
#  tubex-solve - cmake configuration file
# ==================================================================

cmake_minimum_required (VERSION 3.0.2)


project (TUBEX_SOLVE VERSION 2)
set (TUBEX_SOLVE_DESCRIPTION "Short description of the plugin")

################################################################################
# Options for install directory
################################################################################
set (CMAKE_INSTALL_INCLUDEDIR "include" CACHE PATH "C++ header files (include)")
set (CMAKE_INSTALL_LIBDIR "lib" CACHE PATH "object code libraries (lib)")
set (CMAKE_INSTALL_BINDIR "bin" CACHE PATH "user executables (bin)")

get_filename_component(TUBELIB_DATA_DIR    "./make"     ABSOLUTE)

set (CMAKE_BINDIR "./make/bin")

################################################################################
# Check that the compiler supports c++11
################################################################################
include(CheckCXXCompilerFlag)

CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
if(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
  message(FATAL_ERROR "tubex-solve needs a compiler with C++11 support")
endif()

if (WIN32)
  # We need this for strdup under Windows (see issue #287)
  add_definitions(-U__STRICT_ANSI__)
endif ()

################################################################################
# Removing warnings from GAOL
################################################################################

# With Gaol, we add "-Wno-deprecated" to remove lots of warnings generated by
# a function definition in gaol_interval.h
check_cxx_compiler_flag("-Wno-deprecated" COMPILER_SUPPORTS_WNO_DEPRECATED)
if(COMPILER_SUPPORTS_WNO_DEPRECATED)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated")
endif()
set(CMAKE_CXX_FLAGS     "${CMAKE_CXX_FLAGS} -O3")
set(CMAKE_CXX_FLAGS     "${CMAKE_CXX_FLAGS} -DNDEBUG") # comment for debug

################################################################################
# Looking for Ibex, Codac
################################################################################

set(CODAC_INCLUDE_DIRS "/libre/neveu/codac-lib/build/include"
                       "/libre/neveu/ibex-lib/install/include/ibex"
                       "/libre/neveu/ibex-lib/install/install/include"
                       "/libre/neveu/ibex-lib/install/include/ibex/3rd"
		       )

link_directories("/libre/neveu/codac-lib/build/src/core"
  "/libre/neveu/ibex-lib/install/lib"
  "/libre/neveu/ibex-lib/install/lib/ibex/3rd")

#set(CODAC_LDFLAGS "tubex" "ibex" "gaol" "ultim" "gdtoa")

set(CODAC_LDFLAGS "codac" "ibex" "prim")

find_package(Eigen3 REQUIRED NO_MODULE)
  message(STATUS "Found Eigen3 version ${EIGEN3_VERSION}")
  add_definitions(${EIGEN3_DEFINITIONS})
  include_directories(${EIGEN3_INCLUDE_DIRS})

  add_definitions(-Dtubex=codac)


################################################################################
# Compile sources
################################################################################
add_subdirectory (src)
add_subdirectory (problems)

################################################################################
# Tests
################################################################################
option(BUILD_TESTS "Build test" OFF)
if(BUILD_TESTS)
  enable_testing(true)
  include(CTest)

  add_test(NAME solver_01
           COMMAND ./problems/01_picard/01_picard 0)
  add_test(NAME solver_02
           COMMAND ./problems/02_xmsin_fwd/02_xmsin_fwd 0)
  #add_test(NAME solver_03
  #         COMMAND ./problems/03_xmsin_bwd/03_xmsin_bwd 0)
  add_test(NAME solver_04
           COMMAND ./problems/04_bvp/04_bvp 0)
  # add_test(NAME solver_05
  #          COMMAND ./problems/05_delay/05_delay 0)
  # add_test(NAME solver_06
  #          COMMAND ./problems/06_bvp_delay/06_bvp_delay 0)
  add_test(NAME solver_07
           COMMAND ./problems/07_integro_diff/07_integro_diff 0)
  # add_test(NAME solver_08
  #          COMMAND ./problems/08_bvp_delay_2d/08_bvp_delay_2d 0)
  add_test(NAME solver_09
           COMMAND ./problems/09_csdp/09_csdp 0)
  add_test(NAME solver_10
           COMMAND ./problems/10_large_initvalue/10_large_initvalue 0)
endif()
